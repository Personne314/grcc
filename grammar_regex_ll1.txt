%name
regex

%terminals:
litt
int
skip
^
|
(
)
[
]
{
}
+
*
?
-
,

%nonterminals
Expr
End
Union
Concat
Atom
Quant
Letter
Class
Elt
Union_1
Concat_1
Quant_1
Quant_2
Letter_1
Class_1
Elt_1

%axiom
Expr

%rules
Expr -> Union End
End -> 
End -> skip Union )
Union -> Concat Union_1
Concat -> Atom Concat_1
Atom -> Letter Quant
Atom -> ( Union ) Quant
Quant -> 
Quant -> +
Quant -> *
Quant -> ?
Quant -> { int Quant_2
Letter -> litt
Letter -> [ Letter_1
Class -> Elt Class_1
Elt -> litt Elt_1
Union_1 -> 
Union_1 -> | Union
Concat_1 -> 
Concat_1 -> Concat
Quant_1 -> }
Quant_1 -> int }
Quant_2 -> }
Quant_2 -> , Quant_1
Letter_1 -> Class ]
Letter_1 -> ^ Class ]
Class_1 -> 
Class_1 -> Class
Elt_1 -> 
Elt_1 -> - litt