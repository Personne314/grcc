%name
regex

%terminals
litt
int
skip
^
.$
|
(
)
[
]
{
}
+
*
?
-
,

%nonterminals
Expr
Begin
End
Union
Concat
Atom
Quant
Letter
Class
Elt

%axiom
Expr

%rules
Expr -> Begin Union End
Begin -> ^
Begin ->
End -> .$
End ->
Union -> Concat
Union -> Concat | Union
Concat -> Atom
Concat -> Atom Concat
Atom -> ( Union ) Quant
Atom -> Letter Quant
Atom -> ( skip Union )
Quant -> +
Quant -> *
Quant -> ?
Quant -> { int }
Quant -> { int , }
Quant -> { int , int }
Quant ->
Letter -> litt
Letter -> [ Class ]
Letter -> [ ^ Class ]
Class -> Elt
Class -> Elt Class
Elt -> litt
Elt -> litt - litt
